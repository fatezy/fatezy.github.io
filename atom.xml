<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>南山</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-01-22T11:35:52.148Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>张亚飞</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>优化笔记博客系统</title>
    <link href="http://yoursite.com/2017/01/22/%E7%AC%94%E8%AE%B0%E5%8D%9A%E5%AE%A2%E7%B3%BB%E7%BB%9F/"/>
    <id>http://yoursite.com/2017/01/22/笔记博客系统/</id>
    <published>2017-01-21T16:00:00.000Z</published>
    <updated>2017-01-22T11:35:52.148Z</updated>
    
    <content type="html">&lt;h2 id=&quot;序言&quot;&gt;&lt;a href=&quot;#序言&quot; class=&quot;headerlink&quot; title=&quot;序言&quot;&gt;&lt;/a&gt;序言&lt;/h2&gt;&lt;p&gt;国内的云笔记这些天又走了之前网盘的老路，限制免费用户。更有甚者，甚至连网络同步功能直接关闭。我都不知道，连同步功能都没有还叫什么云笔记 。&lt;/p&gt;
&lt;p&gt;同时hexo博客也出了些问题，博客部署到github上，由于外网的原因，打开速度特别慢。有时可能不在同一台电脑上写博客，所以还要同步博客的源文件。博客的源文件文件数量很多，同步起来有点慢。另外博客源文件并不想暴露出来，要设为私有库。我的私有库受时间限制，只能去找别的托管网站。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;注:&lt;strong&gt;gitbook即是一个工具的名称，也是一个网站的名称。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;云笔记&quot;&gt;&lt;a href=&quot;#云笔记&quot; class=&quot;headerlink&quot; title=&quot;云笔记&quot;&gt;&lt;/a&gt;云笔记&lt;/h2&gt;&lt;p&gt;近些天国内的各种云笔记又走了国内网盘的老路，限制免费用户，直觉告诉我可能要有一波云笔记要倒闭，只能想别的办法。&lt;/p&gt;
&lt;h3 id=&quot;为知笔记&quot;&gt;&lt;a href=&quot;#为知笔记&quot; class=&quot;headerlink&quot; title=&quot;为知笔记&quot;&gt;&lt;/a&gt;为知笔记&lt;/h3&gt;&lt;p&gt;之前笔者一直用的是为知笔记。各种功能还算齐全。支持Markdown，还有Linux客户端，运行的也很稳定，用了快一年的时间，体验还是相当不错的。但是可能是受资金影响的原因，限制免费用户单机运行，云笔记成了记事本。而且导出功能并不是特别方便。&lt;/p&gt;
&lt;h3 id=&quot;蚂蚁笔记&quot;&gt;&lt;a href=&quot;#蚂蚁笔记&quot; class=&quot;headerlink&quot; title=&quot;蚂蚁笔记&quot;&gt;&lt;/a&gt;蚂蚁笔记&lt;/h3&gt;&lt;p&gt;当我放弃了为知笔记的时候，想迁移到这个云笔记上面，开源，免费，功能强大。在github上有好几千star，支持Linux客户端。主题漂亮。但是运行的不是特别稳定，还没来得及迁移到上面，这个云笔记又成免费用户单机版。&lt;/p&gt;
&lt;h3 id=&quot;有道云笔记&quot;&gt;&lt;a href=&quot;#有道云笔记&quot; class=&quot;headerlink&quot; title=&quot;有道云笔记&quot;&gt;&lt;/a&gt;有道云笔记&lt;/h3&gt;&lt;p&gt;没办法只能继续挪窝，同时对云笔记市场表示担忧，感觉迟早要完蛋的感觉。支持Markdown的云笔记，大厂出品。虽然UI不太接受，同时也不支持Linux，但是还可以勉强用。用了两天，神奇的发现网易这么大的公司，投入这么多宣传，竟然也有这么不靠谱的产品。首先，笔记做长了，卡顿。这都不说了，神奇的还在后面，最操蛋的是&lt;strong&gt;Markdown不支持内部图片链接，也就是说所有的图片只能用外链&lt;/strong&gt;。目前比较靠谱的解决方法，是把图片文件夹分享成外链再弄，总是让人感觉不舒服。还继续挪窝吧，靠谱的云笔记且支持Markdown貌似是不好找了。&lt;/p&gt;
&lt;h2 id=&quot;gitbook&quot;&gt;&lt;a href=&quot;#gitbook&quot; class=&quot;headerlink&quot; title=&quot;gitbook&quot;&gt;&lt;/a&gt;gitbook&lt;/h2&gt;&lt;p&gt;最后我是抛弃了云笔记，选择了&lt;strong&gt;gitbook+私有库&lt;/strong&gt;来解决问题。虽然gitbook的社区并不算强大，但是好歹也是有个社区，可以提供一些插件。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;gitbook有以下好处&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;git&lt;/strong&gt;作为同步工具，svn也行。&lt;/li&gt;
&lt;li&gt;完美支持MarkDown,解决部分云笔记不支持MarkDown问题.&lt;/li&gt;
&lt;li&gt;跨平台。&lt;/li&gt;
&lt;li&gt;资源导出方便，通过gitbook官网或本地插件可以导出&lt;strong&gt;多种通用格式&lt;/strong&gt;，包括epub,mobi，pdf等。&lt;/li&gt;
&lt;li&gt;不担心小公司倒闭，或者要挟收费，这家不好换那家。实在不行，自己建库。再不行，网盘同步。&lt;/li&gt;
&lt;li&gt;可以部署到博客上。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;至于gitbook的配置搭建就不说了，官网有详细教程&lt;a href=&quot;https://toolchain.gitbook.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; toolchain documentation.&lt;/a&gt;。如果感觉npm慢的话，可以切换成阿里的源。只要执行下面一句就好&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm config set registry http://registry.npm.taobao.org&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;安装好gitbook后，可以下载一个&lt;strong&gt;GitBook Editor&lt;/strong&gt;，它是gitbook官网的编辑器。这个编辑器到目前还不够完善，但是已经可用。感觉不好用的话，可以用各种MarkDown工具代替。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/assets/preview_windows.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;插件&quot;&gt;&lt;a href=&quot;#插件&quot; class=&quot;headerlink&quot; title=&quot;插件&quot;&gt;&lt;/a&gt;插件&lt;/h3&gt;&lt;p&gt;网上的教程有很多介绍插件的，我推荐安装的一个插件是toggle-chapters。原生的gitbook不支持隐藏二级目录。加上这个插件，方便笔记管理。&lt;/p&gt;
&lt;p&gt;下载命令:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install gitbook-plugin-toggle-chapters&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;配置book.json&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;plugins&amp;quot;: [&amp;quot;toggle-chapters&amp;quot;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;私有库&quot;&gt;&lt;a href=&quot;#私有库&quot; class=&quot;headerlink&quot; title=&quot;私有库&quot;&gt;&lt;/a&gt;私有库&lt;/h3&gt;&lt;p&gt;如果用gitbook作为同步网站的话，那么你的所有的笔记都是公开可见的，因为我有些只适合于做笔记。因此并不想公开展示。所以可以在github上开设私有库。如果没有github私有库，可以选择国内的一些托管平台。我用的是coding。把整个GitBook Editor的产生电子书的文件夹下，配置远程库。然后在gitbook Editor&lt;br&gt;上点击&lt;code&gt;SAVE&lt;/code&gt;保存再提交。非常方便。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/assets/import.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;gitbook部署&quot;&gt;&lt;a href=&quot;#gitbook部署&quot; class=&quot;headerlink&quot; title=&quot;gitbook部署&quot;&gt;&lt;/a&gt;gitbook部署&lt;/h3&gt;&lt;p&gt;我们可以为一个gitbook单独建立一个项目，配置项目pages。执行&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;gitbook build&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;生成网站，然后把生成的_book文件夹上传开启项目pages就行。用户也可以配置单独的域名。&lt;/p&gt;
&lt;p&gt;这只是其中一种方法，如果用gitbook同步,本身就是部署好的。部署到国内的托管平台，速度会快一点。&lt;/p&gt;
&lt;h2 id=&quot;博客&quot;&gt;&lt;a href=&quot;#博客&quot; class=&quot;headerlink&quot; title=&quot;博客&quot;&gt;&lt;/a&gt;博客&lt;/h2&gt;&lt;p&gt;之前我的这个博客是用hexo部署到github上的。然后再把blog的源文件部署成私有库。即这个博客有两个库，一个是blog的库，一个是博客的源库。用了一段时间之后发现了有有个问题。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;因为github的服务器在海外，所以blog访问速度有点慢。&lt;/li&gt;
&lt;li&gt;github的私有库要钱，但是同步的博客的源文件并不想公开。我的私有库有时间限制。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;双库部署&quot;&gt;&lt;a href=&quot;#双库部署&quot; class=&quot;headerlink&quot; title=&quot;双库部署&quot;&gt;&lt;/a&gt;双库部署&lt;/h3&gt;&lt;p&gt;针对访问速度慢，我的解决方案是这样的。&lt;/p&gt;
&lt;p&gt;hexo部署的时候部署到两个库一个是github，一个是coding。如果乐意，可以把所有的git项目托管到多个平台上，这样更安全。愿意的同学，可以到网上找找，一个git项目如何配置多个远程库，很简单。这里不加介绍，&lt;strong&gt;下面是博客的多库部署，配置。并不是git项目的多平台托管。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;修改配置文件&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;deploy:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  type: git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  repository: &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            github: xxx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            coding: xxx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  branch: master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;同时配置域名解析，&lt;strong&gt;把一个域名解析到两个博客上，海外设置访问github。国内设置访问coding。&lt;/strong&gt;之前一直是用github，毕竟github社区是无可比拟的，但是之后我可能会把私有库移植到国内的托管平台，速度更快。&lt;/p&gt;
&lt;h3 id=&quot;遇到的问题&quot;&gt;&lt;a href=&quot;#遇到的问题&quot; class=&quot;headerlink&quot; title=&quot;遇到的问题&quot;&gt;&lt;/a&gt;遇到的问题&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;博客源文件同步会可能回到&lt;code&gt;Filename too long&lt;/code&gt;的问题。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在Git bash中，运行下列命令：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git config --global core.longpaths true&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;同步博客源文件，主题同步不上。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;删除主题目录下的.git文件夹就行了。&lt;/p&gt;
&lt;h2 id=&quot;尾言&quot;&gt;&lt;a href=&quot;#尾言&quot; class=&quot;headerlink&quot; title=&quot;尾言&quot;&gt;&lt;/a&gt;尾言&lt;/h2&gt;&lt;p&gt;目前来看问题基本解决，不用担心某个托管网站停服，因为git项目迁移很方便。唯一担心的是一夜之间所有的托管平台，限制普通用户不能用私有库。学习gitbook的话可以参考以下这篇&lt;a href=&quot;http://gitbook.zhangjikai.com/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;博客&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;序言&quot;&gt;&lt;a href=&quot;#序言&quot; class=&quot;headerlink&quot; title=&quot;序言&quot;&gt;&lt;/a&gt;序言&lt;/h2&gt;&lt;p&gt;国内的云笔记这些天又走了之前网盘的老路，限制免费用户。更有甚者，甚至连网络同步功能直接关闭。我都不知道，连同步功能都没有还叫什么云笔记 。&lt;/p&gt;
&lt;p&gt;同时hexo博客也出了些问题，博客部署到github上，由于外网的原因，打开速度特别慢。有时可能不在同一台电脑上写博客，所以还要同步博客的源文件。博客的源文件文件数量很多，同步起来有点慢。另外博客源文件并不想暴露出来，要设为私有库。我的私有库受时间限制，只能去找别的托管网站。&lt;/p&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://yoursite.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随笔" scheme="http://yoursite.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>ReverseInteger解题报告</title>
    <link href="http://yoursite.com/2016/06/25/ReverseInteger%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    <id>http://yoursite.com/2016/06/25/ReverseInteger解题报告/</id>
    <published>2016-06-25T13:44:52.000Z</published>
    <updated>2017-01-22T11:35:52.116Z</updated>
    
    <content type="html">&lt;h5 id=&quot;题目概述：&quot;&gt;&lt;a href=&quot;#题目概述：&quot; class=&quot;headerlink&quot; title=&quot;题目概述：&quot;&gt;&lt;/a&gt;题目概述：&lt;/h5&gt;&lt;p&gt;Reverse digits of an integer.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Example1: x = 123, return 321&lt;/li&gt;
&lt;li&gt;Example2: x = -123, return -321&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&quot;题目解释：-逆序一个整数，其实这道题的难度，并不大，绝大多数人看到这题，都可以快速得到解题思路。但是这道题的核心是考察程序员对于边界条件的思考判断。&quot;&gt;&lt;a href=&quot;#题目解释：-逆序一个整数，其实这道题的难度，并不大，绝大多数人看到这题，都可以快速得到解题思路。但是这道题的核心是考察程序员对于边界条件的思考判断。&quot; class=&quot;headerlink&quot; title=&quot;题目解释： 逆序一个整数，其实这道题的难度，并不大，绝大多数人看到这题，都可以快速得到解题思路。但是这道题的核心是考察程序员对于边界条件的思考判断。&quot;&gt;&lt;/a&gt;题目解释： 逆序一个整数，其实这道题的难度，并不大，绝大多数人看到这题，都可以快速得到解题思路。但是这道题的核心是考察程序员对于边界条件的思考判断。&lt;/h5&gt;&lt;h5 id=&quot;解法一：&quot;&gt;&lt;a href=&quot;#解法一：&quot; class=&quot;headerlink&quot; title=&quot;解法一：&quot;&gt;&lt;/a&gt;解法一：&lt;/h5&gt;&lt;p&gt;这是在leetcode讨论区看到的大牛的解法,一般需要考虑边界条件的解法，会有很多if判断，特殊条件之类的影响，写出的代码也是阅读性极差，而且容易丢三落四。这也是最考验代码水平的地方。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public int reverse(int x)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int result = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    while (x != 0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int tail = x % 10;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int newResult = result * 10 + tail;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if ((newResult - tail) / 10 != result)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123; return 0; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        result = newResult;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        x = x / 10;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return result;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;解法二&quot;&gt;&lt;a href=&quot;#解法二&quot; class=&quot;headerlink&quot; title=&quot;解法二&quot;&gt;&lt;/a&gt;解法二&lt;/h5&gt;&lt;p&gt;解题思路：题目的重点是对于末尾为0和越界这两个边界条件的判断。会导致程序异常。考虑到这点，我们可以巧妙的利用java的异常处理机制。虽然解法并不优秀。但胜在思路奇特。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public static int reverse(int x) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       if (x&amp;lt;0)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           String s = String.valueOf(x*(-1));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           StringBuffer stringBuffer = new StringBuffer(s);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           try &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               int result = Integer.parseInt(stringBuffer.reverse().toString());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               return result*-1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;#125;catch (Exception e)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               return 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125;else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           String s = String.valueOf(x);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           StringBuffer stringBuffer = new StringBuffer(s);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           try &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               return Integer.parseInt(stringBuffer.reverse().toString());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;#125;catch (Exception e)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               return 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;题目概述：&quot;&gt;&lt;a href=&quot;#题目概述：&quot; class=&quot;headerlink&quot; title=&quot;题目概述：&quot;&gt;&lt;/a&gt;题目概述：&lt;/h5&gt;&lt;p&gt;Reverse digits of an integer.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Example1: x = 123, return 321&lt;/li&gt;
&lt;li&gt;Example2: x = -123, return -321&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&quot;题目解释：-逆序一个整数，其实这道题的难度，并不大，绝大多数人看到这题，都可以快速得到解题思路。但是这道题的核心是考察程序员对于边界条件的思考判断。&quot;&gt;&lt;a href=&quot;#题目解释：-逆序一个整数，其实这道题的难度，并不大，绝大多数人看到这题，都可以快速得到解题思路。但是这道题的核心是考察程序员对于边界条件的思考判断。&quot; class=&quot;headerlink&quot; title=&quot;题目解释： 逆序一个整数，其实这道题的难度，并不大，绝大多数人看到这题，都可以快速得到解题思路。但是这道题的核心是考察程序员对于边界条件的思考判断。&quot;&gt;&lt;/a&gt;题目解释： 逆序一个整数，其实这道题的难度，并不大，绝大多数人看到这题，都可以快速得到解题思路。但是这道题的核心是考察程序员对于边界条件的思考判断。&lt;/h5&gt;&lt;h5 id=&quot;解法一：&quot;&gt;&lt;a href=&quot;#解法一：&quot; class=&quot;headerlink&quot; title=&quot;解法一：&quot;&gt;&lt;/a&gt;解法一：&lt;/h5&gt;&lt;p&gt;这是在leetcode讨论区看到的大牛的解法,一般需要考虑边界条件的解法，会有很多if判断，特殊条件之类的影响，写出的代码也是阅读性极差，而且容易丢三落四。这也是最考验代码水平的地方。&lt;/p&gt;
    
    </summary>
    
      <category term="算法" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="leetcode" scheme="http://yoursite.com/tags/leetcode/"/>
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="interesting" scheme="http://yoursite.com/tags/interesting/"/>
    
  </entry>
  
  <entry>
    <title>知识库</title>
    <link href="http://yoursite.com/2016/05/19/%E7%9F%A5%E8%AF%86%E5%BA%93/"/>
    <id>http://yoursite.com/2016/05/19/知识库/</id>
    <published>2016-05-19T14:53:04.000Z</published>
    <updated>2017-01-22T11:35:52.143Z</updated>
    
    <content type="html">&lt;h2 id=&quot;0x1-序&quot;&gt;&lt;a href=&quot;#0x1-序&quot; class=&quot;headerlink&quot; title=&quot;0x1 序&quot;&gt;&lt;/a&gt;0x1 序&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt; 这篇博客收录了一些我品读过大牛的优秀的博文 ！&lt;/strong&gt;&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;0x2-程序人生&quot;&gt;&lt;a href=&quot;#0x2-程序人生&quot; class=&quot;headerlink&quot; title=&quot;0x2 程序人生&quot;&gt;&lt;/a&gt;0x2 程序人生&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://coolshell.cn/articles/4990.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;程序员技术练级攻略&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://coolshell.cn/articles/1695.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;别的程序员是怎么读你的简历的&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;0x3-算法&quot;&gt;&lt;a href=&quot;#0x3-算法&quot; class=&quot;headerlink&quot; title=&quot;0x3 算法&quot;&gt;&lt;/a&gt;0x3 算法&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://www.raychase.net/2763&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;LeetCode算法题目解答汇总&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;0x4-数据库&quot;&gt;&lt;a href=&quot;#0x4-数据库&quot; class=&quot;headerlink&quot; title=&quot;0x4 数据库&quot;&gt;&lt;/a&gt;0x4 数据库&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://coolshell.cn/articles/1846.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MySQL性能优化的最佳20+条经验&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;0x5-jvm&quot;&gt;&lt;a href=&quot;#0x5-jvm&quot; class=&quot;headerlink&quot; title=&quot;0x5 jvm&quot;&gt;&lt;/a&gt;0x5 jvm&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://ifeve.com/java-permgen-removed/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Java PermGen 去哪里了?&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;0x6-java框架技术&quot;&gt;&lt;a href=&quot;#0x6-java框架技术&quot; class=&quot;headerlink&quot; title=&quot;0x6 java框架技术&quot;&gt;&lt;/a&gt;0x6 java框架技术&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://ifeve.com/spring-interview-questions-and-answers/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;69道Spring面试题和答案&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;0x7-java基础&quot;&gt;&lt;a href=&quot;#0x7-java基础&quot; class=&quot;headerlink&quot; title=&quot;0x7 java基础&quot;&gt;&lt;/a&gt;0x7 java基础&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/ns_code/article/details/36034955&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【Java集合源码剖析】HashMap源码剖析&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://blog.csdn.net/ns_code/article/details/35568011&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【Java集合源码剖析】ArrayList源码剖析&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;http://www.importnew.com/19816.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;攻破JAVA NIO技术壁垒&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;0x8-编译原理&quot;&gt;&lt;a href=&quot;#0x8-编译原理&quot; class=&quot;headerlink&quot; title=&quot;0x8 编译原理&quot;&gt;&lt;/a&gt;0x8 编译原理&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://acbingo.cn/2016/03/29/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86_%E4%B8%AD%E7%A7%91%E5%A4%A7%E5%85%AC%E5%BC%80%E8%AF%BE_%E7%AC%AC%E4%B8%80%E5%8D%95%E5%85%83%E7%BC%96%E8%AF%91%E5%99%A8%E4%BB%8B%E7%BB%8D%E4%BD%9C%E4%B8%9A/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Sum编译器&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.kawabangga.com/posts/1147&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;一个词法分析器的简单实现&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;0x9-系统设计&quot;&gt;&lt;a href=&quot;#0x9-系统设计&quot; class=&quot;headerlink&quot; title=&quot;0x9 系统设计&quot;&gt;&lt;/a&gt;0x9 系统设计&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://www.raychase.net/730&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;DAO的演进&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x1-序&quot;&gt;&lt;a href=&quot;#0x1-序&quot; class=&quot;headerlink&quot; title=&quot;0x1 序&quot;&gt;&lt;/a&gt;0x1 序&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt; 这篇博客收录了一些我品读过大牛的优秀的博文 ！&lt;/strong&gt;&lt;br&gt;
    
    </summary>
    
      <category term="其他" scheme="http://yoursite.com/categories/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="其他" scheme="http://yoursite.com/tags/%E5%85%B6%E4%BB%96/"/>
    
  </entry>
  
  <entry>
    <title>爬取教务在线学生相片</title>
    <link href="http://yoursite.com/2016/05/14/%E7%88%AC%E5%8F%96%E6%95%99%E5%8A%A1%E5%9C%A8%E7%BA%BF%E5%AD%A6%E7%94%9F%E7%9B%B8%E7%89%87/"/>
    <id>http://yoursite.com/2016/05/14/爬取教务在线学生相片/</id>
    <published>2016-05-14T10:43:19.000Z</published>
    <updated>2017-01-22T11:35:52.140Z</updated>
    
    <content type="html">&lt;p&gt;最近看了下python,发现python用来做爬虫确实方便，就随手爬去了学校教务在线的学生照片，用到了正则匹配与python的request模块。以下是爬虫代码。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#-*_coding:utf8-*-&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; requests&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; imp &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; reload&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; re&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;spider&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(object)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print( &lt;span class=&quot;string&quot;&gt;u&#39;开始爬取内容。。。&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#getsource用来获取网页源代码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getsource&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self,url)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        html = requests.get(url)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; html.text&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#total_page 表示结束的学号&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#range 表示起始学号&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&#39;__main__&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    url = &lt;span class=&quot;string&quot;&gt;&#39;http://jwzx.cqupt.edu.cn/showstuPic.php?xh=2014213194&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    html = &lt;span class=&quot;string&quot;&gt;&#39;http://jwzx.cqupt.edu.cn/showstuPic.php?xh=2014213194&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    total_page = &lt;span class=&quot;number&quot;&gt;2014213230&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(&lt;span class=&quot;number&quot;&gt;2014213180&lt;/span&gt;,total_page+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        new_link = re.sub(&lt;span class=&quot;string&quot;&gt;&#39;xh=\d+&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;xh=%d&#39;&lt;/span&gt;%i,html,re.S)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; (new_link)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        pic = requests.get(new_link)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fp = open(&lt;span class=&quot;string&quot;&gt;&#39;pic2\\&#39;&lt;/span&gt; + str(i) + &lt;span class=&quot;string&quot;&gt;&#39;.jpg&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;wb&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fp.write(pic.content)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fp.close()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;最近看了下python,发现python用来做爬虫确实方便，就随手爬去了学校教务在线的学生照片，用到了正则匹配与python的request模块。以下是爬虫代码。&lt;/p&gt;
    
    </summary>
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>java PermGen 去哪了</title>
    <link href="http://yoursite.com/2016/05/14/java-PermGen-%E5%8E%BB%E5%93%AA%E4%BA%86/"/>
    <id>http://yoursite.com/2016/05/14/java-PermGen-去哪了/</id>
    <published>2016-05-14T07:42:45.000Z</published>
    <updated>2017-01-22T11:35:52.132Z</updated>
    
    <content type="html">&lt;h3 id=&quot;Java-PermGen-去哪里了&quot;&gt;&lt;a href=&quot;#Java-PermGen-去哪里了&quot; class=&quot;headerlink&quot; title=&quot;Java PermGen 去哪里了?&quot;&gt;&lt;/a&gt;Java PermGen 去哪里了?&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://www.infoq.com/articles/Java-PERMGEN-Removed&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;原文链接&lt;/a&gt;：原文作者：Monica Beckwith  以下为本人翻译，仅用于交流学习，版权归原作者和InfoQ所有，转载注明出处，请不要用于商业用途&lt;/p&gt;
&lt;p&gt;在Java虚拟机(JVM)内部，class文件中包括类的版本、字段、方法、接口等描述信息，还有运行时常量池，用于存放编译器生成的各种字面量和符号引用。&lt;/p&gt;
&lt;p&gt;在过去（自定义类加载器还不是很常见的时候），类大多是”static”的，很少被卸载或收集，因此被称为“永久的(Permanent)”。同时，由于类class是JVM实现的一部分，并不是由应用创建的，所以又被认为是“非堆(non-heap)”内存。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;在JDK8之前的HotSpot JVM，存放这些”永久的”的区域叫做“永久代(permanent generation)”。永久代是一片连续的堆空间，在JVM启动之前通过在命令行设置参数-XX:MaxPermSize来设定永久代最大可分配的内存空间，默认大小是64M（64位JVM由于指针膨胀，默认是85M）。永久代的垃圾收集是和老年代(old generation)捆绑在一起的，因此无论谁满了，都会触发永久代和老年代的垃圾收集。不过，一个明显的问题是，当JVM加载的类信息容量超过了参数-XX：MaxPermSize设定的值时，应用将会报OOM的错误(对于这句话，译者的理解是：32位的JVM默认MaxPermSize是64M，而JDK8里的Metaspace，也可以通过参数-XX:MetaspaceSize 和-XX:MaxMetaspaceSize设定大小，但如果不指定MaxMetaspaceSize的话，Metaspace的大小仅受限于native memory的剩余大小。也就是说永久代的最大空间一定得有个指定值，而如果MaxPermSize指定不当，就会OOM)。&lt;/p&gt;
&lt;p&gt;注：在JDK7之前的版本，对于HopSpot JVM，interned-strings存储在永久代（又名PermGen），会导致大量的性能问题和OOM错误。从PermGen移除interned strings的更多信息查看&lt;a href=&quot;http://bugs.java.com/view_bug.do?bug_id=6962931&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;译者注：从JDK7开始永久代的移除工作，贮存在永久代的一部分数据已经转移到了Java Heap或者是Native Heap。但永久代仍然存在于JDK7，并没有完全的移除：符号引用(Symbols)转移到了native heap;字面量(interned strings)转移到了java heap;类的静态变量(class statics)转移到了java heap。&lt;/p&gt;
&lt;p&gt;在JDK7 update 4即随后的版本中，提供了完整的支持对于Garbage-First(G1)垃圾收集器，以取代在JDK5中发布的CMS收集器。使用G1，PermGen仅仅在FullGC（stop-the-word,STW）时才会被收集。G1仅仅在PermGen满了或者应用分配内存的速度比G1并发垃圾收集速度快的时候才触发FullGC。&lt;/p&gt;
&lt;p&gt;而对于CMS收集器，通过开启布尔参数-XX:+CMSClassUnloadingEnabled来并发对PermGen进行收集。对于G1没有类似的选项，G1只能通过FullGC，stop the world,来对PermGen进行收集。&lt;/p&gt;
&lt;p&gt;永久代在JDK8中被完全的移除了。所以永久代的参数-XX:PermSize和-XX：MaxPermSize也被移除了。&lt;/p&gt;
&lt;p&gt;在JDK8中,classe metadata(the virtual machines internal presentation of Java class),被存储在叫做Metaspace的native memory。一些新的flags被加入：&lt;br&gt;-XX:MetaspaceSize，class metadata的初始空间配额，以bytes为单位，达到该值就会触发垃圾收集进行类型卸载，同时GC会对该值进行调整：如果释放了大量的空间，就适当的降低该值；如果释放了很少的空间，那么在不超过MaxMetaspaceSize（如果设置了的话），适当的提高该值。&lt;br&gt;-XX：MaxMetaspaceSize，可以为class metadata分配的最大空间。默认是没有限制的。&lt;br&gt;-XX：MinMetaspaceFreeRatio,在GC之后，最小的Metaspace剩余空间容量的百分比，减少为class metadata分配空间导致的垃圾收集&lt;br&gt;-XX:MaxMetaspaceFreeRatio,在GC之后，最大的Metaspace剩余空间容量的百分比，减少为class metadata释放空间导致的垃圾收集&lt;/p&gt;
&lt;p&gt;默认情况下，class metadata的分配仅受限于可用的native memory总量。可以使用MaxMetaspaceSize来限制可为class metadata分配的最大内存。当class metadata的使用的内存达到MetaspaceSize(32位clientVM默认12Mbytes,32位ServerVM默认是16Mbytes)时就会对死亡的类加载器和类进行垃圾收集。设置MetaspaceSize为一个较高的值可以推迟垃圾收集的发生。&lt;/p&gt;
&lt;p&gt;Native Heap，就是C-Heap。对于32位的JVM，C-Heap的容量=4G-Java Heap-PermGen；对于64位的JVM，C-Heap的容量=物理服务器的总RAM+虚拟内存-Java Heap-PermGen&lt;/p&gt;
&lt;p&gt;这里科普下，在Windows下称为虚拟内存(virtual memory),在Linux下称为交换空间(swap space),用于当系统需要更多的内存资源而物理内存已经满了的情况下，将物理内存中不活跃的页转移到磁盘上的交换空间中。&lt;/p&gt;
&lt;p&gt;在JDK8，Native Memory，包括Metaspace和C-Heap。&lt;/p&gt;
&lt;p&gt;IBM的J9和Oracle的JRockit(收购BEA公司的JVM)都没有永久代的概念，而Oracle移除HotSpot中的永久代的原因之一是为了与JRockit合并，以充分利用各自的特点。&lt;/p&gt;
&lt;h3 id=&quot;再见，再见PermGen，你好Metaspace&quot;&gt;&lt;a href=&quot;#再见，再见PermGen，你好Metaspace&quot; class=&quot;headerlink&quot; title=&quot;再见，再见PermGen，你好Metaspace&quot;&gt;&lt;/a&gt;&lt;a name=&quot;t1&quot; style=&quot;text-decoration: underline; outline: none; color: rgb(0, 161, 158);&quot;&gt;&lt;/a&gt;再见，再见PermGen，你好Metaspace&lt;/h3&gt;&lt;p&gt;随着JDK8的到来，JVM不再有PermGen。但类的元数据信息（metadata）还在，只不过不再是存储在连续的堆空间上，而是移动到叫做“Metaspace”的本地内存（Native memory）中。&lt;/p&gt;
&lt;p&gt;类的元数据信息转移到Metaspace的原因是PermGen很难调整。PermGen中类的元数据信息在每次FullGC的时候可能会被收集，但成绩很难令人满意。而且应该为PermGen分配多大的空间很难确定，因为PermSize的大小依赖于很多因素，比如JVM加载的class的总数，常量池的大小，方法的大小等。&lt;/p&gt;
&lt;p&gt;此外，在HotSpot中的每个垃圾收集器需要专门的代码来处理存储在PermGen中的类的元数据信息。从PermGen分离类的元数据信息到Metaspace,由于Metaspace的分配具有和Java Heap相同的地址空间，因此Metaspace和Java Heap可以无缝的管理，而且简化了FullGC的过程，以至将来可以并行的对元数据信息进行垃圾收集，而没有GC暂停。&lt;br&gt;&lt;img src=&quot;http://i.imgur.com/WS0hb1g.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;永久代的移除对最终用户意味着什么？&quot;&gt;&lt;a href=&quot;#永久代的移除对最终用户意味着什么？&quot; class=&quot;headerlink&quot; title=&quot;永久代的移除对最终用户意味着什么？&quot;&gt;&lt;/a&gt;&lt;a name=&quot;t2&quot; style=&quot;text-decoration: underline; outline: none; color: rgb(0, 161, 158);&quot;&gt;&lt;/a&gt;永久代的移除对最终用户意味着什么？&lt;/h3&gt;&lt;p&gt;由于类的元数据可以在本地内存(native memory)之外分配,所以其最大可利用空间是整个系统内存的可用空间。这样，你将不再会遇到OOM错误，溢出的内存会涌入到交换空间。最终用户可以为类元数据指定最大可利用的本地内存空间，JVM也可以增加本地内存空间来满足类元数据信息的存储。&lt;/p&gt;
&lt;p&gt;注：永久代的移除并不意味者类加载器泄露的问题就没有了。因此，你仍然需要监控你的消费和计划，因为内存泄露会耗尽整个本地内存，导致内存交换(swapping)，这样只会变得更糟。&lt;/p&gt;
&lt;h3 id=&quot;移动到Metaspace和它的内存分配&quot;&gt;&lt;a href=&quot;#移动到Metaspace和它的内存分配&quot; class=&quot;headerlink&quot; title=&quot;移动到Metaspace和它的内存分配&quot;&gt;&lt;/a&gt;&lt;a name=&quot;t3&quot; style=&quot;text-decoration: underline; outline: none; color: rgb(0, 161, 158);&quot;&gt;&lt;/a&gt;移动到Metaspace和它的内存分配&lt;/h3&gt;&lt;p&gt;Metaspace VM利用内存管理技术来管理Metaspace。这使得由不同的垃圾收集器来处理类元数据的工作，现在仅仅由Metaspace VM在Metaspace中通过C++来进行管理。Metaspace背后的一个思想是，类和它的元数据的生命周期是和它的类加载器的生命周期一致的。也就是说，只要类的类加载器是存活的，在Metaspace中的类元数据也是存活的，不能被释放。&lt;/p&gt;
&lt;p&gt;之前我们不严格的使用这个术语“Metaspace”。更正式的，每个类加载器存储区叫做“a metaspace”。这些metaspaces一起总体称为”the Metaspace”。仅仅当类加载器不在存活，被垃圾收集器声明死亡后，该类加载器对应的metaspace空间才可以回收。Metaspace空间没有迁移和压缩。但是元数据会被扫描是否存在Java引用。&lt;/p&gt;
&lt;p&gt;Metaspace VM使用一个块分配器(chunking allocator)来管理Metaspace空间的内存分配。块的大小依赖于类加载器的类型。其中有一个全局的可使用的块列表（a global free list of chunks）。当类加载器需要一个块的时候，类加载器从全局块列表中取出一个块，添加到它自己维护的块列表中。当类加载器死亡，它的块将会被释放，归还给全局的块列表。块（chunk）会进一步被划分成blocks,每个block存储一个元数据单元(a unit of metadata)。Chunk中Blocks的分配线性的（pointer bump）。这些chunks被分配在内存映射空间(memory mapped(mmapped) spaces)之外。在一个全局的虚拟内存映射空间（global virtual mmapped spaces）的链表，当任何虚拟空间变为空时，就将该虚拟空间归还回操作系统。&lt;br&gt;&lt;img src=&quot;http://i.imgur.com/JFH75Lz.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;上面这幅图展示了Metaspace使用metachunks在mmapeded virual spaces分配的情形。类加载器1和3描述的是反射或匿名类加载器，使用“特定的”chunk尺寸。类加载器2和4使用小还是中等的chunk尺寸取决于加载的类数量。&lt;/p&gt;
&lt;h3 id=&quot;Metaspace大小的调整和可以使用的工具&quot;&gt;&lt;a href=&quot;#Metaspace大小的调整和可以使用的工具&quot; class=&quot;headerlink&quot; title=&quot;Metaspace大小的调整和可以使用的工具&quot;&gt;&lt;/a&gt;&lt;a name=&quot;t4&quot; style=&quot;text-decoration: underline; outline: none; color: rgb(0, 161, 158);&quot;&gt;&lt;/a&gt;Metaspace大小的调整和可以使用的工具&lt;/h3&gt;&lt;p&gt;正如前面提到了，Metaspace VM管理Metaspace空间的增长。但有时你会想通过在命令行显示的设置参数-XX:MaxMetaspaceSize来限制Metaspace空间的增长。默认情况下，-XX:MaxMetaspaceSize并没有限制，因此，在技术上，Metaspace的尺寸可以增长到交换空间，而你的本地内存分配将会失败。&lt;/p&gt;
&lt;p&gt;对于64位的服务器端JVM，-XX：MetaspaceSize的默认大小是21M。这是初始的限制值(the initial high watermark)。一旦达到这个限制值，FullGC将会被触发进行类卸载(当这些类的类加载器不再存活时)，然后这个high watermark被重置。新的high watermark的值依赖于空余Metaspace的容量。如果没有足够的空间被释放，high watermark的值将会上升；如果释放了大量的空间，那么high watermark的值将会下降。如果初始的watermark设置的太低，这个过程将会进行多次。你可以通过垃圾收集日志来显示的查看这个垃圾收集的过程。所以，一般建议在命令行设置一个较大的值给XX:MetaspaceSize来避免初始时的垃圾收集。&lt;/p&gt;
&lt;p&gt;每次垃圾收集之后，Metaspace VM会自动的调整high watermark，推迟下一次对Metaspace的垃圾收集。&lt;/p&gt;
&lt;p&gt;这两个参数，-XX：MinMetaspaceFreeRatio和-XX：MaxMetaspaceFreeRatio,类似于GC的FreeRatio参数，可以放在命令行。&lt;/p&gt;
&lt;p&gt;针对Metaspace，JDK自带的一些工具做了修改来展示Metaspace的信息：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;jmap -clstats &lt;/strong&gt;:打印类加载器的统计信息(取代了在JDK8之前打印类加载器信息的permstat)。一个例子的输出当运行DaCapo’s Avrora基准测试：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ jmap -clstats &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Attaching to process ID 6476, please wait...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Debugger attached successfully.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Server compiler detected.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;JVM version is 25.5-b02&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;finding class loader instances ..done.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;computing per loader stat ..done.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;please wait.. computing liveness.liveness analysis may be inaccurate ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class_loader classes bytes parent_loader alive? type &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;bootstrap\&amp;gt; 655 1222734 null live &amp;lt;internal&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0x000000074004a6c0000x000000074004a708dead java/util/ResourceBundle$RBClassLoader@0x00000007c0053e20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0x000000074004a76000 null dead sun/misc/Launcher$ExtClassLoader@0x00000007c002d248 0x00000007401189c8 1 1471&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0x00000007400752f8dead sun/reflect/DelegatingClassLoader@0x00000007c0009870 0x000000074004a708116 3160530x000000074004a760 dead sun/misc/Launcher$AppClassLoader@0x00000007c0038190 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0x00000007400752f8538 7738540x000000074004a708 dead org/dacapo/harness/DacapoClassLoader@0x00000007c00638b0 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;total = 6 1310 2314112 N/A alive=1, dead=5 N/A&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;jstat -gc &lt;/strong&gt;:Metaspace的信息也会被打印出来，如下面的例子所示：&lt;br&gt;&lt;img src=&quot;http://i.imgur.com/oEE3iA5.jpg&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;jcmd GC.class_stats&lt;/strong&gt;:这是一个新的诊断命令，可以使用户连接到存活的JVM，转储Java类元数据的详细统计。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注：在JDK8 build 13下，需要开启参数-XX：+UnlockDiagnosticVMOptions&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ jcmd  help GC.class_stats&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9522:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;GC.class_stats &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Provide statistics about Java class meta data. Requires -XX:+UnlockDiagnosticVMOptions. &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Impact: High: Depends on Java heap size and content. &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Syntax : GC.class_stats [options] [&amp;lt;columns&amp;gt;] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Arguments: &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  columns : [optional] Comma-separated list of all the columns to show. If not specified, the following columns are shown: InstBytes,KlassBytes,CpAll,annotations,MethodCount,Bytecodes,MethodAll,ROAll,RWAll,Total (STRING, no default value) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Options: (options must be specified using the &amp;lt;key&amp;gt; or &amp;lt;key&amp;gt;=&amp;lt;value&amp;gt; syntax) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  -all : [optional] Show all columns (BOOLEAN, false) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  -csv : [optional] Print in CSV (comma-separated values) format for spreadsheets (BOOLEAN, false) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  -help : [optional] Show meaning of all the columns (BOOLEAN, false&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;注：对于列的更多信息，请查看&lt;a href=&quot;https://bugs.openjdk.java.net/secure/attachment/11600/ver_010_help.txt&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;。&lt;br&gt;一个输出列子：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ jcmd  GC.class_stats &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7140:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Index Super InstBytes KlassBytes annotations CpAll MethodCount Bytecodes MethodAll ROAll RWAll Total ClassName &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1 -1 426416 480 0 0 0 0 0 24 576 600 [C &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2 -1 290136 480 0 0 0 0 0 40 576 616 [Lavrora.arch.legacy.LegacyInstr; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3 -1 269840 480 0 0 0 0 0 24 576 600 [B &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4 43 137856 648 0 19248 129 4886 25288 16368 30568 46936 java.lang.Class &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5 43 136968 624 0 8760 94 4570 33616 12072 32000 44072 java.lang.String &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6 43 75872 560 0 1296 7 149 1400 880 2680 3560 java.util.HashMap$Node &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7 836 57408 608 0 720 3 69 1480 528 2488 3016 avrora.sim.util.MulticastFSMProbe &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8 43 55488 504 0 680 1 31 440 280 1536 1816 avrora.sim.FiniteStateMachine$State &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9 -1 53712 480 0 0 0 0 0 24 576 600 [Ljava.lang.Object; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10 -1 49424 480 0 0 0 0 0 24 576 600 [I &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11 -1 49248 480 0 0 0 0 0 24 576 600 [Lavrora.sim.platform.ExternalFlash$Page; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12 -1 24400 480 0 0 0 0 0 32 576 608 [Ljava.util.HashMap$Node; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13 394 21408 520 0 600 3 33 1216 432 2080 2512 avrora.sim.AtmelInterpreter$IORegBehavior &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14 727 19800 672 0 968 4 71 1240 664 2472 3136 avrora.arch.legacy.LegacyInstr$MOVW &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;…&amp;lt;snipped&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;…&amp;lt;snipped&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1299 1300 0 608 0 256 1 5 152 104 1024 1128 sun.util.resources.LocaleNamesBundle &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1300 1098 0 608 0 1744 10 290 1808 1176 3208 4384 sun.util.resources.OpenListResourceBundle &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1301 1098 0 616 0 2184 12 395 2200 1480 3800 5280 sun.util.resources.ParallelListResourceBundle &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 2244312 794288 2024 2260976 12801 561882 3135144 1906688 4684704 6591392 Total &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 34.0% 12.1% 0.0% 34.3% - 8.5% 47.6% 28.9% 71.1% 100.0% &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Index Super InstBytes KlassBytes annotations CpAll MethodCount Bytecodes MethodAll ROAll RWAll Total ClassName&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;当前的问题&quot;&gt;&lt;a href=&quot;#当前的问题&quot; class=&quot;headerlink&quot; title=&quot;当前的问题&quot;&gt;&lt;/a&gt;当前的问题&lt;/h3&gt;&lt;p&gt;先前提到的，Metaspace VM使用块分配器(chunking allocator)。chunk的大小取决于类加载器的类型。由于类class并没有一个固定的尺寸，这就存在这样一种可能：可分配的chunk的尺寸和需要的chunk的尺寸不相等，这就会导致内存碎片。Metaspace VM还没有使用压缩技术，所以内存碎片是现在的一个主要关注的问题。&lt;br&gt;&lt;img src=&quot;http://i.imgur.com/5424Rjo.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://ifeve.com/java-permgen-removed/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;原文地址&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Java-PermGen-去哪里了&quot;&gt;&lt;a href=&quot;#Java-PermGen-去哪里了&quot; class=&quot;headerlink&quot; title=&quot;Java PermGen 去哪里了?&quot;&gt;&lt;/a&gt;Java PermGen 去哪里了?&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://www.infoq.com/articles/Java-PERMGEN-Removed&quot;&gt;原文链接&lt;/a&gt;：原文作者：Monica Beckwith  以下为本人翻译，仅用于交流学习，版权归原作者和InfoQ所有，转载注明出处，请不要用于商业用途&lt;/p&gt;
&lt;p&gt;在Java虚拟机(JVM)内部，class文件中包括类的版本、字段、方法、接口等描述信息，还有运行时常量池，用于存放编译器生成的各种字面量和符号引用。&lt;/p&gt;
&lt;p&gt;在过去（自定义类加载器还不是很常见的时候），类大多是”static”的，很少被卸载或收集，因此被称为“永久的(Permanent)”。同时，由于类class是JVM实现的一部分，并不是由应用创建的，所以又被认为是“非堆(non-heap)”内存。&lt;/p&gt;
    
    </summary>
    
      <category term="jvm" scheme="http://yoursite.com/categories/jvm/"/>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
      <category term="jvm" scheme="http://yoursite.com/tags/jvm/"/>
    
  </entry>
  
  <entry>
    <title>comparator接口与Comparable接口的区别</title>
    <link href="http://yoursite.com/2016/05/12/comparator%E6%8E%A5%E5%8F%A3%E4%B8%8EComparable%E6%8E%A5%E5%8F%A3%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    <id>http://yoursite.com/2016/05/12/comparator接口与Comparable接口的区别/</id>
    <published>2016-05-12T12:31:44.000Z</published>
    <updated>2017-01-22T11:35:52.126Z</updated>
    
    <content type="html">&lt;h5 id=&quot;1-Comparator-和-Comparable-相同的地方&quot;&gt;&lt;a href=&quot;#1-Comparator-和-Comparable-相同的地方&quot; class=&quot;headerlink&quot; title=&quot;1. Comparator 和 Comparable 相同的地方&quot;&gt;&lt;/a&gt;1. Comparator 和 Comparable 相同的地方&lt;/h5&gt;&lt;p&gt;他们都是java的一个接口, 并且是用来对自定义的class比较大小的,&lt;/p&gt;
&lt;p&gt;什么是自定义class: 如 public class Person{ String name; int age }.&lt;/p&gt;
&lt;p&gt;当我们有这么一个personList,里面包含了person1, person2, persion3….., 我们用Collections.sort( personList ), &lt;/p&gt;
&lt;p&gt;是得不到预期的结果的. 这时肯定有人要问, 那为什么可以排序一个字符串list呢:&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;如 StringList{“hello1” , “hello3” , “hello2”}, Collections.sort( stringList ) 能够得到正确的排序, 那是因为 &lt;/p&gt;
&lt;p&gt;String 这个对象已经帮我们实现了 Comparable接口 , 所以我们的 Person 如果想排序, 也要实现一个比较器。&lt;/p&gt;
&lt;h5 id=&quot;2-Comparator-和-Comparable-的区别&quot;&gt;&lt;a href=&quot;#2-Comparator-和-Comparable-的区别&quot; class=&quot;headerlink&quot; title=&quot;2. Comparator 和 Comparable 的区别&quot;&gt;&lt;/a&gt;2. Comparator 和 Comparable 的区别&lt;/h5&gt;&lt;p&gt; &lt;strong&gt; Comparable&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Comparable 定义在 Person类的内部:&lt;/p&gt;
&lt;p&gt;public class Persion implements Comparable {..比较Person的大小..},&lt;/p&gt;
&lt;p&gt; 因为已经实现了比较器,那么我们的Person现在是一个可以比较大小的对象了,它的比较功能和String完全一样,可以随时随地的拿来&lt;/p&gt;
&lt;p&gt;比较大小,因为Person现在自身就是有大小之分的。Collections.sort(personList)可以得到正确的结果。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; Comparator&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Comparator 是定义在Person的外部的, 此时我们的Person类的结构不需要有任何变化,如&lt;/p&gt;
&lt;p&gt;public class Person{ String name; int age },&lt;/p&gt;
&lt;p&gt;然后我们另外定义一个比较器:&lt;/p&gt;
&lt;p&gt;public PersonComparator implements Comparator() {..比较Person的大小..},&lt;/p&gt;
&lt;p&gt;在PersonComparator里面实现了怎么比较两个Person的大小. 所以,用这种方法,当我们要对一个 personList进行排序的时候, &lt;/p&gt;
&lt;p&gt;我们除了了要传递personList过去, 还需要把PersonComparator传递过去,因为怎么比较Person的大小是在PersonComparator&lt;/p&gt;
&lt;p&gt;里面实现的, 如:&lt;/p&gt;
&lt;p&gt;Collections.sort( personList , new PersonComparator() ).&lt;/p&gt;
&lt;h5 id=&quot;3-Comparator-和-Comparable-的实例&quot;&gt;&lt;a href=&quot;#3-Comparator-和-Comparable-的实例&quot; class=&quot;headerlink&quot; title=&quot;3. Comparator 和 Comparable 的实例&quot;&gt;&lt;/a&gt;3. Comparator 和 Comparable 的实例&lt;/h5&gt;&lt;p&gt;&lt;strong&gt; Comparable:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;实现Comparable接口要覆盖compareTo方法, 在compareTo方法里面实现比较：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Comparable&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     String name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; age&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;compareTo&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Person another)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          i = name.compareTo(another.name); &lt;span class=&quot;comment&quot;&gt;// 使用字符串的比较&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(i == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123; &lt;span class=&quot;comment&quot;&gt;// 如果名字一样,比较年龄, 返回比较年龄结果&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; age - another.age;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; i; &lt;span class=&quot;comment&quot;&gt;// 名字不一样, 返回比较名字的结果.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;   这时我们可以直接用 Collections.sort( personList ) 对其排序了.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; Comparator:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;实现Comparator需要覆盖 compare 方法：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     String name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; age&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;PersonComparator&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Comparator&lt;/span&gt; &lt;/span&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;compare&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Person one, Person another)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          i = one.name.compareTo(another.name); &lt;span class=&quot;comment&quot;&gt;// 使用字符串的比较&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(i == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123; &lt;span class=&quot;comment&quot;&gt;// 如果名字一样,比较年龄,返回比较年龄结果&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; one.age - another.age;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; i; &lt;span class=&quot;comment&quot;&gt;// 名字不一样, 返回比较名字的结果.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;`&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;   Collections.sort( personList , new PersonComparator()) 可以对其排序&lt;/p&gt;
&lt;h5 id=&quot;4-总结&quot;&gt;&lt;a href=&quot;#4-总结&quot; class=&quot;headerlink&quot; title=&quot;4:总结&quot;&gt;&lt;/a&gt;4:总结&lt;/h5&gt;&lt;p&gt;两种方法各有优劣, 用Comparable 简单, 只要实现Comparable 接口的对象直接就成为一个可以比较的对象,&lt;/p&gt;
&lt;p&gt;但是需要修改源代码, 用Comparator 的好处是不需要修改源代码, 而是另外实现一个比较器, 当某个自定义&lt;/p&gt;
&lt;p&gt;的对象需要作比较的时候,把比较器和对象一起传递过去就可以比大小了, 并且在Comparator 里面用户可以自&lt;/p&gt;
&lt;p&gt;己实现复杂的可以通用的逻辑,使其可以匹配一些比较简单的对象,那样就可以节省很多重复劳动了。&lt;/p&gt;
&lt;p&gt;  &lt;a href=&quot;http://www.cnblogs.com/sunflower627/p/3158042.html&quot; title=&quot;原文地址&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;原文地址&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;1-Comparator-和-Comparable-相同的地方&quot;&gt;&lt;a href=&quot;#1-Comparator-和-Comparable-相同的地方&quot; class=&quot;headerlink&quot; title=&quot;1. Comparator 和 Comparable 相同的地方&quot;&gt;&lt;/a&gt;1. Comparator 和 Comparable 相同的地方&lt;/h5&gt;&lt;p&gt;他们都是java的一个接口, 并且是用来对自定义的class比较大小的,&lt;/p&gt;
&lt;p&gt;什么是自定义class: 如 public class Person{ String name; int age }.&lt;/p&gt;
&lt;p&gt;当我们有这么一个personList,里面包含了person1, person2, persion3….., 我们用Collections.sort( personList ), &lt;/p&gt;
&lt;p&gt;是得不到预期的结果的. 这时肯定有人要问, 那为什么可以排序一个字符串list呢:&lt;br&gt;
    
    </summary>
    
      <category term="java" scheme="http://yoursite.com/categories/java/"/>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>java内存溢出</title>
    <link href="http://yoursite.com/2016/05/10/java%E5%86%85%E5%AD%98%E6%BA%A2%E5%87%BA/"/>
    <id>http://yoursite.com/2016/05/10/java内存溢出/</id>
    <published>2016-05-10T13:54:17.000Z</published>
    <updated>2017-01-22T11:35:52.136Z</updated>
    
    <content type="html">&lt;h4 id=&quot;java堆溢出&quot;&gt;&lt;a href=&quot;#java堆溢出&quot; class=&quot;headerlink&quot; title=&quot;java堆溢出&quot;&gt;&lt;/a&gt;java堆溢出&lt;/h4&gt;&lt;p&gt;java堆用来存储对象实例，只有不断地创建对象，并保证GC Roots到对象之间有可到达路径来避免垃圾回收机制&lt;/p&gt;
&lt;p&gt;，那么当对象的数量达到最大堆的容量后就会产生内存溢出异常。&lt;/p&gt;
&lt;p&gt;VM arguments:&lt;/p&gt;
&lt;p&gt;-verbose:gc -Xms20M -Xmx20M -Xmn10M -XX:+PrintGCDetails -XX:SurvivorRatio=8&lt;/p&gt;
&lt;p&gt;设置堆的最大内存为20MB，最小内存也是20MB&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;HeapOOM&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;OOMObject&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        List&amp;lt;OOMObject&amp;gt; list = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;OOMObject&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            list.add(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; OOMObject());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;p&gt;Exception in thread “main” java.lang.OutOfMemoryError: Java heap space&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;at java.util.Arrays.copyOf(Arrays.java:3210)

at java.util.Arrays.copyOf(Arrays.java:3181)

at java.util.ArrayList.grow(ArrayList.java:261)

at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:235)

at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:227)

at java.util.ArrayList.add(ArrayList.java:458)

at OutOfMemory.HeapOOM.main(HeapOOM.java:19)
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;h4 id=&quot;虚拟机栈与本地方法栈溢出&quot;&gt;&lt;a href=&quot;#虚拟机栈与本地方法栈溢出&quot; class=&quot;headerlink&quot; title=&quot;虚拟机栈与本地方法栈溢出&quot;&gt;&lt;/a&gt;虚拟机栈与本地方法栈溢出&lt;/h4&gt;&lt;p&gt;注：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;* 平时所指的栈就是这一部分，或者说是虚拟机栈中的局部变量表

* 本地方法栈与虚拟机栈类似，只不过本地方法栈为虚拟机使用的Native方法服务，即可能是别的语言实现的方法
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;如果请求的栈深度大于虚拟机所允许的最大深度，将抛出StackOverflowError异常&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果虚拟机在扩展栈的时候无法申请到足够的内存空间，则抛出OutOfMemoryError异常&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;虽然看似严谨，其实并没有卵用&lt;/p&gt;
&lt;p&gt;VM arguments: -Xss128k&lt;/p&gt;
&lt;p&gt;注： 其实不设的默认的虚拟机栈空间也并不大&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;JavaVMStackSOF&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; stackLength = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;stackLeak&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		stackLength++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		stackLeak();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		JavaVMStackSOF oom = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; JavaVMStackSOF();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		oom.stackLeak();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt;(Throwable e)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;stack length&quot;&lt;/span&gt;+ oom.stackLength);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; e;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;p&gt;stack length987&lt;/p&gt;
&lt;p&gt;Exception in thread “main” java.lang.StackOverflowError&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;at OutOfMemory.JavaVMStackSOF.stackLeak(JavaVMStackSOF.java:17)

at OutOfMemory.JavaVMStackSOF.stackLeak(JavaVMStackSOF.java:18)

at OutOfMemory.JavaVMStackSOF.stackLeak(JavaVMStackSOF.java:18)
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;h4 id=&quot;方法区与运行时常量溢出&quot;&gt;&lt;a href=&quot;#方法区与运行时常量溢出&quot; class=&quot;headerlink&quot; title=&quot;方法区与运行时常量溢出&quot;&gt;&lt;/a&gt;方法区与运行时常量溢出&lt;/h4&gt;&lt;p&gt;jdk1.7开始逐步去除永久代&lt;/p&gt;
&lt;p&gt;String.intern()是一个Native方法，他的作用是： 如果字符串常量包含一个等于此对象的字符串，则返回这个字符串的String对象；否则添加至常量池&lt;/p&gt;
&lt;p&gt;VM：-XX:PermSize=3M -XX:MaxPermSize=3M&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(String arg: args)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			System.out.println(arg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//避免回收常量池&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		List&amp;lt;String&amp;gt; list = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;String&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;10000000&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;//try&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			list.add(String.valueOf(i++).intern());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//	&amp;#125;catch(Throwable e)&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;//	System.out.println(&quot;添加的常量数量：&quot;+ i);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;//	throw e;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;//&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;java1.8并不会抛出异常&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;java1.7之前会抛出OutOfMemoryError: 由于常量池分配于永久代，可以通过Vm配置限制方法区的内存现在常量池的内存&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;JDK7中符号表被移动到 Native Heap中，字符串常量和类引用被移动到 Java Heap中。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在 JDK8 中，永久代已完全被元空间(Meatspace)所取代。（JDK8 HotSpot JVM 使用本地内存来存储类元数据信息并称之为：元空间（Metaspace）；）&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&quot;在jdk8中限制堆的大小会抛出如下异常&quot;&gt;&lt;a href=&quot;#在jdk8中限制堆的大小会抛出如下异常&quot; class=&quot;headerlink&quot; title=&quot;在jdk8中限制堆的大小会抛出如下异常&quot;&gt;&lt;/a&gt;在jdk8中限制堆的大小会抛出如下异常&lt;/h5&gt;&lt;h5 id=&quot;java7也是这个结果，不知道是我编译器没配好，还是别的原因&quot;&gt;&lt;a href=&quot;#java7也是这个结果，不知道是我编译器没配好，还是别的原因&quot; class=&quot;headerlink&quot; title=&quot;java7也是这个结果，不知道是我编译器没配好，还是别的原因&quot;&gt;&lt;/a&gt;java7也是这个结果，不知道是我编译器没配好，还是别的原因&lt;/h5&gt;&lt;hr&gt;
&lt;p&gt;Exception in thread “main” java.lang.OutOfMemoryError: GC overhead limit exceeded&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;at java.lang.Integer.toString(Integer.java:401)

at java.lang.String.valueOf(String.java:3099)

at OutOfMemory.RuntimeConstantPoolOOM.main(RuntimeConstantPoolOOM.java:26)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF-8&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&quot;本机直接内存泄漏&quot;&gt;&lt;a href=&quot;#本机直接内存泄漏&quot; class=&quot;headerlink&quot; title=&quot;本机直接内存泄漏&quot;&gt;&lt;/a&gt;本机直接内存泄漏&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;设置直接内存大小&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;VM:-Xmx20M -XX:MaxDirectMemorySize=10M&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;DirectMemoryOOM&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; _1MB = &lt;span class=&quot;number&quot;&gt;1024&lt;/span&gt; * &lt;span class=&quot;number&quot;&gt;1024&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IllegalArgumentException,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        IllegalAccessException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// TODO Auto-generated method stub&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      Field unsafeField = Unsafe.class.getDeclaredFields()[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      unsafeField.setAccessible(&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      Unsafe unsafe = (Unsafe) unsafeField.get(&lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        unsafe.allocateMemory(_1MB);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;java堆溢出&quot;&gt;&lt;a href=&quot;#java堆溢出&quot; class=&quot;headerlink&quot; title=&quot;java堆溢出&quot;&gt;&lt;/a&gt;java堆溢出&lt;/h4&gt;&lt;p&gt;java堆用来存储对象实例，只有不断地创建对象，并保证GC Roots到对象之间有可到达路径来避免垃圾回收机制&lt;/p&gt;
&lt;p&gt;，那么当对象的数量达到最大堆的容量后就会产生内存溢出异常。&lt;/p&gt;
&lt;p&gt;VM arguments:&lt;/p&gt;
&lt;p&gt;-verbose:gc -Xms20M -Xmx20M -Xmn10M -XX:+PrintGCDetails -XX:SurvivorRatio=8&lt;/p&gt;
&lt;p&gt;设置堆的最大内存为20MB，最小内存也是20MB&lt;/p&gt;
    
    </summary>
    
      <category term="jvm" scheme="http://yoursite.com/categories/jvm/"/>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
      <category term="jvm" scheme="http://yoursite.com/tags/jvm/"/>
    
  </entry>
  
  <entry>
    <title>SingleNumber解题报告及java位运算</title>
    <link href="http://yoursite.com/2016/04/24/SingleNumber%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    <id>http://yoursite.com/2016/04/24/SingleNumber解题报告/</id>
    <published>2016-04-24T04:01:37.000Z</published>
    <updated>2017-01-22T11:35:52.122Z</updated>
    
    <content type="html">&lt;h4 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h4&gt;&lt;p&gt;题目概述：Given an array of integers, every element appears twice except for one. Find that single one.&lt;/p&gt;
&lt;p&gt;中文释意：给你一个数组，里面仅有有一个数字重复了一次，其余的数字都出现了两次，找出那个仅出现了一次的数字。&lt;/p&gt;
&lt;p&gt;注：虽然题目很水，但是解决之后对于自己对java的位运算有了新的认识，故写下这篇解题报告&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h5 id=&quot;解法一&quot;&gt;&lt;a href=&quot;#解法一&quot; class=&quot;headerlink&quot; title=&quot;解法一&quot;&gt;&lt;/a&gt;解法一&lt;/h5&gt;&lt;p&gt;解题思路：先对数组进行排序，然后找出奇数项和偶数项不同的数字&lt;br&gt;评价： Arrays排序的效率并不高，故排序之后再进行遍历超时，无奈之下只好进行新的尝试。&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;singleNumber&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;[] nums)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Arrays.sort(nums);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (nums.length==&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (nums.length==&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; nums[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt;nums.length ; i=i+&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (nums[i]!=nums[i+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;])&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; nums[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;!-- more --&gt;
&lt;h5 id=&quot;解法二&quot;&gt;&lt;a href=&quot;#解法二&quot; class=&quot;headerlink&quot; title=&quot;解法二&quot;&gt;&lt;/a&gt;解法二&lt;/h5&gt;&lt;p&gt;解题思路：观察数组易想到，先用set集合保存所有的数字一份，然后扩大两倍减去原数组所有数字之和，便可得到要求的结果&lt;/p&gt;
&lt;p&gt;评价： 因为set集合底层使用的是hashmap故效率较高，并未超时&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;singleNumber3&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;[] nums)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; sum = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            nums) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           sum+=i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       Set&amp;lt;Integer&amp;gt; set = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; HashSet&amp;lt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            nums) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           set.add(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       Integer sum2 =&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; ;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       Iterator iterator  = set.iterator();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (iterator.hasNext())&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           sum2 += (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;)iterator.next();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; sum2*&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;-sum;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;题目做到这，虽然做完了，但是还是效率不够高，故有了这个让人眼前一亮的第三种解法&lt;/p&gt;
&lt;h5 id=&quot;第三种解法&quot;&gt;&lt;a href=&quot;#第三种解法&quot; class=&quot;headerlink&quot; title=&quot;第三种解法&quot;&gt;&lt;/a&gt;第三种解法&lt;/h5&gt;&lt;p&gt;思路：java位运算^&lt;br&gt;评价： 此方法效率奇高，数学很重要 -.-|||&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;singleNumber2&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;[] nums)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; res = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; num : nums) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           res ^= num;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; res;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;注： &lt;a href=&quot;http://fatezy.github.io/2016/04/24/java位运算/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;java位运算&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h4&gt;&lt;p&gt;题目概述：Given an array of integers, every element appears twice except for one. Find that single one.&lt;/p&gt;
&lt;p&gt;中文释意：给你一个数组，里面仅有有一个数字重复了一次，其余的数字都出现了两次，找出那个仅出现了一次的数字。&lt;/p&gt;
&lt;p&gt;注：虽然题目很水，但是解决之后对于自己对java的位运算有了新的认识，故写下这篇解题报告&lt;/p&gt;
    
    </summary>
    
      <category term="java" scheme="http://yoursite.com/categories/java/"/>
    
    
      <category term="leetcode" scheme="http://yoursite.com/tags/leetcode/"/>
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
</feed>
